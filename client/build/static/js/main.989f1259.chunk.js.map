{"version":3,"sources":["modules/user/user.actions.js","modules/user/user.reducer.js","modules/boards/boards.actions.js","modules/boards/boards.reducer.js","modules/cards/cards.actions.js","modules/cards/cards.reducer.js","modules/store.js","functions/PrivateRouter/PrivateRouter.js","constants/routes.js","components/Nav/Nav.js","containers/HomePage/HomePage.js","containers/RegisterPage/RegisterPage.js","containers/DashBoards/DashBoards.js","constants/history.js","containers/DashBoard/DashBoard.js","containers/LogOut/LogOut.js","containers/NotFoundPage/NotFoundPage.js","App.js","index.js"],"names":["setCurrentUser","createAction","currentUserUnset","userLogin","data","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","result","wrap","_context","prev","next","axios","post","then","res","localStorage","setItem","JSON","stringify","type","catch","err","errorBody","concat","sent","abrupt","stop","_x","apply","this","arguments","userCreate","_ref2","_callee2","_context2","_x2","initialState","user","parse","getItem","userStatus","reducer","_reducer","defineProperty","actions","state","objectSpread","createReducer","setAllBoards","getAllBoards","userToken","token","headers","Authorization","createBoard","removeBoard","id","_ref3","_callee3","_context3","delete","_x3","allBoardsUnset","boards","boardsStatus","boards_reducer_reducer","setAllCards","getAllCards","boardTitle","createCard","title","cardTitle","createCardItem","patch","cardId","items","value","itemTitle","removeCardItem","_ref4","_callee4","_context4","itemId","_x4","cards","cardsStatus","CardsStatus","rootReducer","combineReducers","store","createStore","compose","applyMiddleware","thunk","window","devToolsExtension","f","PrivateRouter","_this$props","props","component","to","rest","objectWithoutProperties","react_default","createElement","Route","assign","render","Redirect","React","Component","routes","homePage","register","dashBoards","dashBoard","pathToRegexp","logout","Nav","className","Link","connect","userActions","HomePage","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onInputChange","e","setState","mail","target","responseGoogleSuccess","response","profileObj","email","responseGoogleError","console","log","handleLogin","preventDefault","userData","mailRef","current","password","passwordRef","error","createRef","components_Nav_Nav","for","onChange","ref","onClick","google_login_default","clientId","buttonText","onSuccess","onFailure","authActions","RegisterPage","_isMounted","createButton","name","nameRef","required","DashBoards","onCreateClick","prompt","onRemoveClick","_this2","undefined","_this3","map","item","i","key","bind","_id","boardsActions","createBrowserHistory","DashBoard","cardName","cardItemName","history","location","pathname","onCardCreateClick","onCardItemRemove","cardID","itemID","placeholder","card","cardsActions","clear","push","NotFoundPage","App","Switch","functions_PrivateRouter_PrivateRouter","exact","path","LogOut","withRouter","ReactDOM","es","Router","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.989f1259.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport { createAction } from \"redux-act\";\r\n\r\nexport const setCurrentUser = createAction(\"set current user\"); // set's user\r\nexport const currentUserUnset = createAction(\"current user unset / logout user\"); // unset's user\r\n\r\n// function that login user\r\nexport const userLogin = data => async dispatch => {\r\n    let result;\r\n\r\n    // logining user\r\n    // eslint-disable-next-line\r\n    const user = await axios.post('/users/login', data)\r\n        .then(res => {\r\n            localStorage.setItem('user', JSON.stringify(res.data));\r\n            dispatch(setCurrentUser(res.data));\r\n            result = {type: 'sucess'};\r\n        })\r\n        .catch(err => {\r\n            result = {type: 'error', errorBody: `${err}`};\r\n        });\r\n    return result;\r\n};\r\n\r\n// function that creates user\r\nexport const userCreate = data => async dispatch => {\r\n    let result;\r\n\r\n    // creating user\r\n    // eslint-disable-next-line\r\n    const user = await axios.post('/users', data)\r\n        .then(res => {\r\n            localStorage.setItem('user', JSON.stringify(res.data));\r\n            dispatch(setCurrentUser(res.data));\r\n            result = {type: 'sucess'};\r\n        })\r\n        .catch(err => {\r\n            result =  {type: 'error', errorBody: `${err}`};\r\n        });\r\n    return result;\r\n};\r\n\r\n\r\n","import { createReducer } from \"redux-act\";\r\nimport * as actions from \"./user.actions\";\r\n\r\n\r\nconst initialState = {\r\n\tuser: null || JSON.parse(localStorage.getItem('user')),\r\n\tuserStatus: localStorage.getItem('user') ? 'sucess' : 'pending'\r\n};\r\n\r\nconst reducer = {\r\n\t[actions.setCurrentUser]: (state, user) => ({\r\n\t\t...state,\r\n\t\tuser: user,\r\n\t\tuserStatus: \"success\"\r\n\t}),\r\n\t[actions.currentUserUnset]: (state, user) => ({\r\n\t\t...state,\r\n\t\tuser: null,\r\n\t\tuserStatus: \"pending\"\r\n\t})\r\n};\r\n\r\n\r\nexport default createReducer(reducer, initialState);\r\n","import { createAction } from \"redux-act\";\r\nimport axios from 'axios';\r\n\r\nexport const setAllBoards = createAction('setting all boards');\r\n\r\nexport const getAllBoards = () => async dispatch => {\r\n    let result;\r\n    const userToken = JSON.parse(localStorage.getItem('user')).token; \r\n\r\n    // get all boards\r\n    // eslint-disable-next-line\r\n    const boards = await axios.post('/dashBoards', null, { headers: { Authorization:  'Bearer ' + userToken } })\r\n        .then(res => {\r\n            dispatch(setAllBoards(res.data));\r\n            localStorage.setItem('boards', JSON.stringify(res.data));\r\n        })\r\n        .catch(err => {\r\n            result = {type: 'error', errorBody: `${err}`};\r\n        });\r\n    return result;\r\n};\r\n\r\nexport const createBoard = (data) => async dispatch => {\r\n    let result;\r\n\r\n    // creating board\r\n    // eslint-disable-next-line\r\n    const board = await axios.post('/dashBoards/create', data)\r\n        .then(res => {\r\n            dispatch(getAllBoards());\r\n            result = {type: 'sucess'};\r\n        })\r\n        .catch(err => {\r\n            result =  {type: 'error', errorBody: `${err}`};\r\n        });\r\n    return result;\r\n}\r\n\r\nexport const removeBoard = (id) => async dispatch => {\r\n    let result;\r\n    \r\n    // removing board\r\n    // eslint-disable-next-line\r\n    const board = await axios.delete(`/dashBoards/${id}`)\r\n        .then(res => {\r\n            dispatch(getAllBoards());\r\n            result = {type: 'sucess'};\r\n        })\r\n        .catch(err => {\r\n            result =  {type: 'error', errorBody: `${err}`};\r\n        });\r\n    return result;\r\n}\r\n\r\nexport const allBoardsUnset = createAction('unset boards');","import { createReducer } from \"redux-act\";\r\n\r\nimport * as actions from \"./boards.actions\";\r\n\r\nconst initialState = {\r\n\tboards: null || JSON.parse(localStorage.getItem('boards')),\r\n\tboardsStatus: localStorage.getItem('boards') ? 'sucess' : 'pending'\r\n};\r\n\r\nconst reducer = {\r\n\t[actions.setAllBoards]: (state, boards) => ({\r\n        ...state,\r\n\t\tboards: boards,\r\n\t\tboardsStatus: \"success\"\r\n\t}),\r\n\t[actions.allBoardsUnset]: (state, boards) => ({\r\n        ...state,\r\n\t\tboards: null,\r\n\t\tboardsStatus: \"pending\"\r\n\t})\r\n};\r\n\r\n\r\nexport default createReducer(reducer, initialState);\r\n","import { createAction } from \"redux-act\";\r\nimport axios from 'axios';\r\n\r\nexport const setAllCards = createAction('setting all cards');\r\n\r\nexport const getAllCards = (boardTitle) => async dispatch => {\r\n    let result;\r\n\r\n    // get all cards\r\n    // eslint-disable-next-line\r\n    const boards = await axios.post(`${boardTitle}/cards`)\r\n        .then(res => {\r\n            dispatch(setAllCards(res.data));\r\n            localStorage.setItem('cards', JSON.stringify(res.data));\r\n        })\r\n        .catch(err => {\r\n            result = {type: 'error', errorBody: `${err}`};\r\n        });\r\n    return result;\r\n};\r\n\r\nexport const createCard = (data) => async dispatch => {\r\n    let result;\r\n\r\n    // creating board\r\n    // eslint-disable-next-line\r\n    const board = await axios.post(`${data.boardTitle}/cards/create`, {title: data.cardTitle})\r\n        .then(res => {\r\n            dispatch(getAllCards(data.boardTitle));\r\n            result = {type: 'sucess'};\r\n        })\r\n        .catch(err => {\r\n            result =  {type: 'error', errorBody: `${err}`};\r\n        });\r\n    return result;\r\n}\r\n\r\nexport const createCardItem = (data) => async dispatch => {\r\n    let result;\r\n\r\n    // creating board\r\n    // eslint-disable-next-line\r\n    const board = await axios.patch(`${data.boardTitle}/cards/${data.cardId}/create`, { items:  [{value: data.itemTitle}] , id: data.cardId })\r\n        .then(res => { \r\n            dispatch(getAllCards(data.boardTitle));\r\n            result = {type: 'sucess'};\r\n        })\r\n        .catch(err => {\r\n            result =  {type: 'error', errorBody: `${err}`};\r\n        });\r\n    return result;\r\n}\r\n\r\nexport const removeCardItem = (data) => async dispatch => {\r\n    let result;\r\n    \r\n    // removing board\r\n    // eslint-disable-next-line\r\n    const card = await axios.delete(`${data.boardTitle}/cards/${data.cardId}/${data.itemId}/remove`)\r\n        .then(res => {\r\n            dispatch(getAllCards(data.boardTitle));\r\n            result = {type: 'sucess'};\r\n        })\r\n        .catch(err => {\r\n            result =  {type: 'error', errorBody: `${err}`};\r\n        });\r\n    return result;\r\n}\r\n\r\n// export const removeCard = (id) => async dispatch => {\r\n//     let result;\r\n    \r\n//     // removing board\r\n//     // eslint-disable-next-line\r\n//     const card = await axios.delete(`/dashBoards/${id}`)\r\n//         .then(res => {\r\n//             dispatch(getAllBoards());\r\n//             result = {type: 'sucess'};\r\n//         })\r\n//         .catch(err => {\r\n//             result =  {type: 'error', errorBody: `${err}`};\r\n//         });\r\n//     return result;\r\n// }","import { createReducer } from \"redux-act\";\r\n\r\nimport * as actions from \"./cards.actions\";\r\n\r\nconst initialState = {\r\n\tcards: null || JSON.parse(localStorage.getItem('cards')),\r\n\tcardsStatus: JSON.parse(localStorage.getItem('cards')) ? 'sucess' : \"pending\"\r\n};\r\n\r\nconst reducer = {\r\n\t[actions.setAllCards]: (state, cards) => ({\r\n        ...state,\r\n\t\tcards: cards,\r\n\t\tCardsStatus: \"success\"\r\n\t})\r\n};\r\n\r\n\r\nexport default createReducer(reducer, initialState);\r\n","import { compose, createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport user from \"./user/user.reducer\";\r\nimport boards from \"./boards/boards.reducer\";\r\nimport cards from \"./cards/cards.reducer\";\r\n\r\nconst rootReducer = combineReducers({ user, boards, cards });\r\n\r\nconst store = createStore(rootReducer, compose(\r\n\tapplyMiddleware(thunk),\r\n\twindow.devToolsExtension ? window.devToolsExtension() : f => f\r\n));\r\n\r\nexport default store;\r\n","/* eslint-disable react/prefer-stateless-function,react/jsx-no-bind,react/forbid-prop-types */\n/* eslint-disable curly */\nimport React, { Component } from 'react';\nimport { Route, Redirect } from \"react-router-dom\";\n\nclass PrivateRouter extends Component {\n\n\trender() {\n\t\tconst { component, state, to, ...rest } = this.props;\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Route\n\t\t\t\t\t{...rest}\n\t\t\t\t\trender={(props) => {\n\t\t\t\t\t\tif (!state && to) return <Redirect to={to} />;\n\n\t\t\t\t\t\treturn React.createElement(component, props);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n\nexport default PrivateRouter;\n","import pathToRegexp from 'path-to-regexp';\r\nconst regexp = pathToRegexp('/dashBoards/:boardName');\r\n\r\nconst routes = {\r\n    homePage: '/',\r\n    register: '/register',\r\n    dashBoards: '/dashBoards',\r\n    dashBoard: regexp,\r\n    logout: '/logout'\r\n}\r\n\r\nexport default routes;","import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\n\r\nimport routes from '../../constants/routes';\r\nimport * as userActions from \"../../modules/user/user.actions\";\r\nimport '../../styles/Nav.css';\r\n\r\nclass Nav extends Component { \r\n    render() {\r\n        const { user } = this.props;\r\n        return (\r\n            <nav className='nav'>\r\n                <Link to={routes.dashBoards}>Доски</Link>\r\n                {(user === null) && <Link to={routes.homePage}>Войти</Link>}\r\n                {(user !== null) && <Link to={routes.logout}>Выйти</Link>}\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({ user }) {\r\n\treturn {\r\n        user: user.user\r\n\t};\r\n}\r\n  \r\nexport default connect(mapStateToProps, { ...userActions })(Nav);\r\n  ","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport * as authActions from \"../../modules/user/user.actions\";\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport routes from '../../constants/routes';\r\nimport Nav from '../../components/Nav/Nav';\r\nimport '../../styles/HomePage.css';\r\n\r\nimport GoogleLogin from 'react-google-login';\r\n\r\nclass HomePage extends Component { \r\n    constructor(props){\r\n        super(props);\r\n        \r\n        this.mailRef = React.createRef();\r\n        this.passwordRef = React.createRef();\r\n\r\n        this.state = {\r\n            mail: '',\r\n            error: ''\r\n        }\r\n    }\r\n\r\n    onInputChange = (e) => {\r\n        this.setState({\r\n            mail: e.target.value\r\n        });\r\n    }\r\n\r\n    responseGoogleSuccess = (response) => {\r\n        this.setState({\r\n            mail: response.profileObj.email\r\n        });\r\n    }\r\n\r\n    responseGoogleError = (e) => {\r\n        console.log(e);\r\n    }\r\n\r\n    handleLogin = (e) => {\r\n        e.preventDefault();\r\n\r\n        const userData = {\r\n            mail: this.mailRef.current.value,\r\n            password: this.passwordRef.current.value\r\n        }\r\n\r\n        const { userLogin } = this.props;\r\n\r\n        userLogin(userData).then((res) => {\r\n            const result = res;\r\n\r\n            if(result.type === 'error'){\r\n                this.setState({error: 'Что-то пошло не так'});\r\n            } \r\n        });\r\n    }\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <div className='homepage-container'>\r\n                <Nav />\r\n                <div className='homepage-content'>\r\n                    <h1>Вход в Trello Clone</h1>\r\n                        <Link to={routes.register}>Или зарегистрироваться</Link>\r\n\r\n                        <div className='homepage-form'>\r\n                            <label for='homepage-form-mail'>Электронная почта</label>\r\n                            <input type='text' id='homepage-form-mail' value={this.state.mail || ''} onChange={this.onInputChange} ref={this.mailRef}></input>\r\n                            <label for='homepage-form-password'>Пароль</label>\r\n                            <input type='password' id='homepage-form-password' ref={this.passwordRef}></input>\r\n                            <button onClick={this.handleLogin}>Войти</button>\r\n\r\n                            <GoogleLogin\r\n                                clientId=\"771756670044-prlc2epkdq1ficlpdcrqhv1sbbfj2m7m.apps.googleusercontent.com\"\r\n                                buttonText=\"LOGIN WITH GOOGLE\"\r\n                                onSuccess={this.responseGoogleSuccess}\r\n                                onFailure={this.responseGoogleError}\r\n                            />\r\n                            <div className='homepage-form-error'>{this.state.error || ''}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n  \r\nexport default connect(null, { ...authActions })(HomePage);\r\n  ","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as userActions from \"../../modules/user/user.actions\";\r\nimport Nav from '../../components/Nav/Nav';\r\n\r\nimport '../../styles/RegisterPage.css';\r\n\r\nclass RegisterPage extends Component { \r\n    _isMounted = false;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.nameRef = React.createRef();\r\n        this.mailRef = React.createRef();\r\n        this.passwordRef = React.createRef();\r\n\r\n        // this.state = {\r\n        //     error: ''\r\n        // };\r\n    }\r\n\r\n    createButton = () => {\r\n        this._isMounted = true;\r\n\r\n        const userData = {\r\n            name: this.nameRef.current.value,\r\n            mail: this.mailRef.current.value,\r\n            password: this.passwordRef.current.value\r\n        };\r\n\r\n        const { userCreate } = this.props;\r\n        \r\n        userCreate(userData).then(res => {\r\n            if(res.type && res.type === 'error' && this._isMounted === true){\r\n                this.setState({error: 'Что-то пошло не так'});\r\n            }\r\n        });\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this._isMounted = false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='register-container'>\r\n                <Nav />\r\n                <h1>Register</h1>\r\n                <div className='register-form'>\r\n                    <label for='register-form-register'>Имя</label>\r\n                    <input type='text' id='homepage-form-name' required ref={this.nameRef}></input>\r\n                    <label for='register-form-register'>Электронная почта</label>\r\n                    <input type='text' id='homepage-form-mail' required ref={this.mailRef}></input>\r\n                    <label for='register-form-mail'>Пароль</label>\r\n                    <input type='password' id='register-form-password' required ref={this.passwordRef}></input>\r\n                    <button onClick ={this.createButton}>Создать новых аккаунт</button>\r\n                    <Link to='/'>Назад</Link>\r\n                    {/* <div className='register-form-error'>{this.state.error || ''}</div> */}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(null, { ...userActions })(RegisterPage);\r\n  ","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as boardsActions from \"../../modules/boards/boards.actions\";\r\n\r\nimport Nav from '../../components/Nav/Nav';\r\nimport '../../styles/DashBoards.css';\r\n\r\nclass DashBoards extends Component { \r\n    _isMounted = false;\r\n    state = {\r\n        error: ''\r\n    }\r\n\r\n    componentDidMount(){\r\n        this._isMounted = true;\r\n        const { getAllBoards, boards } = this.props;\r\n\r\n        if(boards == null){\r\n            getAllBoards().then(res => {\r\n                if(res !== undefined && res.type !== undefined && res.type === 'error' && this._isMounted === true){\r\n                    this.setState({ error: 'Не удалось получить доски' });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this._isMounted = false;\r\n    }\r\n\r\n    onCreateClick = () => {\r\n        let title = window.prompt('Введите имя доски');\r\n\r\n        if(title ===  ''){\r\n            while(title === ''){\r\n                title = window.prompt('Имя доски не может быть пустой строкой. Введите имя доски');\r\n            }\r\n        }\r\n\r\n        const data = {\r\n            title: title\r\n        } \r\n\r\n        const { createBoard } = this.props;\r\n\r\n        createBoard(data);\r\n    }\r\n\r\n    onRemoveClick = (id) => {\r\n        const { removeBoard } = this.props;\r\n        removeBoard(id);\r\n    }\r\n    \r\n\r\n    render() {\r\n        const { boards } = this.props; \r\n\r\n        return (\r\n            <div className='dashboards-container'>\r\n                <div className='dashboards-content'>\r\n                    <h1>Доски</h1>\r\n\r\n                    <div className='dashboards-items'>\r\n                        {\r\n                            (boards === null) && <p>Загрузка...</p>\r\n                        }\r\n\r\n                        {\r\n                           (boards !== null) &&\r\n                                boards.map((item, i) => {\r\n                                    return (\r\n                                        (item.title !== null && item.title !== undefined) && \r\n                                            <div className='dashboards-item' key={i}>\r\n                                                <Link to={`/dashBoards/${item.title}`}>\r\n                                                    {item.title}\r\n                                                </Link>\r\n                                                <span className='dashboards-item-close' onClick={this.onRemoveClick.bind(null, item._id)}></span>\r\n                                            </div>\r\n                                    );\r\n                                })\r\n                        }\r\n\r\n                        { (boards === []) && <h2>Нет досок</h2> }\r\n                    </div>\r\n\r\n                    <button className='dashboards-create' onClick={this.onCreateClick}>Создать доску</button>                   \r\n                    <div className='dashboards-error'>{this.state.error || ''}</div>\r\n                </div>\r\n                <Nav />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({ boards }) {\r\n\treturn {\r\n        boards: boards.boards\r\n\t};\r\n}\r\n  \r\nexport default connect(mapStateToProps, { ...boardsActions })(DashBoards);\r\n  ","import { createBrowserHistory } from \"history\";\r\n\r\nexport default createBrowserHistory();\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as cardsActions from \"../../modules/cards/cards.actions\";\r\n\r\nimport history from '../../constants/history';\r\nimport routes from '../../constants/routes';\r\nimport '../../styles/DashBoard.css';\r\n\r\nclass DashBoard extends Component { \r\n    _isMounted = false;\r\n    cardName = React.createRef();\r\n    cardItemName = React.createRef();\r\n    state = {\r\n        error: ''\r\n    }\r\n\r\n    onCreateClick = () => {\r\n        const { createCard } = this.props;\r\n\r\n        if(this.cardName.current.value === '' || this.cardName.current.value == null){\r\n            this.setState({ error: 'Имя списка не может быть пустым' });\r\n            return false;\r\n        }\r\n\r\n        this.setState({ error: null });\r\n\r\n        const data = {\r\n            boardTitle: history.location.pathname,\r\n            cardTitle: this.cardName.current.value\r\n        }\r\n\r\n        createCard(data).then(res => {\r\n            if(res !== undefined && res.type !== undefined && res.type === 'error' && this._isMounted === true){\r\n                this.setState({ error: 'Не удалось создать список' });\r\n            }\r\n\r\n            this.cardName.current.value = '';\r\n        });;\r\n    }\r\n\r\n    onCardCreateClick = (id) => {\r\n        const { createCardItem } = this.props;\r\n\r\n        const data = {\r\n            boardTitle: history.location.pathname,\r\n            cardId: id,\r\n            itemTitle: this.cardItemName.current.value\r\n        }\r\n\r\n        createCardItem(data).then(res => {\r\n            if(res !== undefined && res.type !== undefined && res.type === 'error' && this._isMounted === true){\r\n                this.setState({ error: 'Не удалось создать список' });\r\n            }\r\n\r\n            this.cardItemName.current.value = '';\r\n        });\r\n    }\r\n\r\n    onCardItemRemove = (cardID, itemID) => {\r\n        const { removeCardItem } = this.props;\r\n        const data = {\r\n            boardTitle: history.location.pathname,\r\n            cardId: cardID,\r\n            itemId: itemID\r\n        }\r\n        removeCardItem(data);\r\n    }\r\n\r\n    componentDidMount(){\r\n        this._isMounted = true;\r\n        const { getAllCards, cards } = this.props;\r\n\r\n        if(cards == null){\r\n            getAllCards().then(res => {\r\n                if(res !== undefined && res.type !== undefined && res.type === 'error' && this._isMounted === true){\r\n                    this.setState({ error: 'Не удалось получить список' });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this._isMounted = false;\r\n    }\r\n    \r\n    render() {\r\n        const { cards } = this.props;\r\n\r\n        return (\r\n            <div className='dashboard-container'>\r\n                <div className='dashboard-content'>\r\n                    {\r\n                        (cards !== null) &&\r\n                            cards.map((item, i) => {\r\n                                return (\r\n                                    (item.title !== null) && \r\n                                        <div className='dashboard-card' key={i}>\r\n                                            <div className='dashboard-card-wrapper'>\r\n                                                <div className='dashboard-card-header'>\r\n                                                    {item.title}\r\n                                                </div>\r\n                                                <div className='dashboard-card-form'>\r\n                                                    <input className='dashboard-card-form-item-create' placeholder='Введите текст' ref={this.cardItemName}></input>\r\n                                                    <button className='dashboard-card-form-create-btn' onClick={this.onCardCreateClick.bind(null, item._id)}>Добавить</button>\r\n                                                    <ul className='dashboard-card-content'>\r\n                                                        {\r\n                                                            (item.items !== []) && item.items.map((card, i) => {\r\n                                                                return (\r\n                                                                    <div className='dashboard-card-content-item' key={i}>\r\n                                                                        <li>{ card.value }</li>\r\n                                                                        <span className='dashboard-card-content-remove' onClick={this.onCardItemRemove.bind(null, item._id, card._id)}></span>\r\n                                                                    </div>    \r\n                                                                );\r\n                                                            })\r\n                                                        }\r\n                                                    </ul>\r\n                                                </div>\r\n                                            </div>\r\n                                            {/* <span className='dashboard-card-remove' onClick={this.onRemoveClick.bind(null, item._id)}></span> */}\r\n                                        </div>\r\n                                );\r\n                            })\r\n                    }\r\n                    <div className='dashboard-card-create'>\r\n                        <div className='dashboard-card-create-header'>\r\n                            <div className='dashboard-card-create-wrapper'>\r\n                                <input placeholder='Имя' ref={this.cardName}></input>\r\n                            </div>\r\n                        </div>\r\n                        <button className='dashboard-create' onClick={this.onCreateClick}>Создать список</button>\r\n                    </div>\r\n                </div> \r\n                <div className='dashboards-error'>{this.state.error || ''}</div>\r\n                <Link to={routes.dashBoards}>Назад</Link>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({ cards }) {\r\n\treturn {\r\n        cards: cards.cards\r\n\t};\r\n}\r\n  \r\nexport default connect(mapStateToProps, { ...cardsActions })(DashBoard);\r\n  ","import { connect } from \"react-redux\";\r\nimport * as userActions from \"../../modules/user/user.actions\";\r\nimport * as boardsActions from \"../../modules/boards/boards.actions\";\r\nimport history from '../../constants/history';\r\nimport routes from '../../constants/routes';\r\n\r\nconst LogOut = (props) => {\r\n    const { currentUserUnset, allBoardsUnset } = props;\r\n\r\n    // deleting storage\r\n    localStorage.clear();\r\n\r\n    // unsetting boards and user\r\n    currentUserUnset();\r\n    allBoardsUnset();\r\n\r\n    history.push(routes.homePage);\r\n\r\n    return true;\r\n};\r\n\r\nfunction mapStateToProps({ user, boards }) {\r\n\treturn {\r\n        user: user.user,\r\n        boards: boards.boards\r\n\t};\r\n}\r\n\r\nexport default connect(mapStateToProps, { ...userActions, ...boardsActions })(LogOut);\r\n","import React, { Component } from 'react';\r\n\r\nclass NotFoundPage extends Component { \r\n    render() {\r\n        return (\r\n            <h1>404. Page wasn't found</h1>\r\n        );\r\n    }\r\n}\r\n  \r\nexport default NotFoundPage;\r\n  ","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport * as userActions from \"./modules/user/user.actions\";\nimport PrivateRouter from './functions/PrivateRouter/PrivateRouter';\nimport { Route, Switch } from 'react-router-dom';\nimport { withRouter } from \"react-router\";\nimport HomePage from \"./containers/HomePage/HomePage\";\nimport RegisterPage from \"./containers/RegisterPage/RegisterPage\";\nimport DashBoards from \"./containers/DashBoards/DashBoards\";\nimport DashBoard from \"./containers/DashBoard/DashBoard\";\nimport LogOut from \"./containers/LogOut/LogOut\"; \nimport NotFoundPage from \"./containers/NotFoundPage/NotFoundPage\";\nimport routes from './constants/routes';\n\nclass App extends Component {\n  render() {\n    const { user, userStatus } = this.props;\n\n    return (\n      <div className=\"app-container\">\n        <Switch>\n          <PrivateRouter\n            exact\n            path={routes.homePage}\n            state={user === null && userStatus === 'pending'}\n            to={routes.dashBoards}\n            component={HomePage}\n          />\n\n          <PrivateRouter\n            exact\n            path={routes.register}\n            state={user === null && userStatus === 'pending'}\n            to={routes.dashBoards}\n            component={RegisterPage}\n          />\n\n          <PrivateRouter\n            exact\n            path={routes.dashBoards}\n            state={user != null}\n            to={routes.homePage}\n            component={DashBoards}\n          />\n\n          <PrivateRouter\n            exact\n            path={routes.dashBoard}\n            state={user != null}\n            to={routes.homePage}\n            component={DashBoard}\n          />\n\n          <PrivateRouter\n            exact\n            path={routes.logout}\n            state={user != null}\n            to={routes.homePage}\n            component={LogOut}\n          />\n\n          <Route component={NotFoundPage} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ user }) {\n\treturn {\n\t\tuser: user.user,\n    userStatus: user.userStatus\n\t};\n}\n\nexport default withRouter(connect(mapStateToProps, { ...userActions })(App));\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport store from \"./modules/store\";\nimport App from './App';\nimport { Router } from 'react-router-dom';\nimport history from \"./constants/history\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router history={history}>\n            <App />\n        </Router>\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}